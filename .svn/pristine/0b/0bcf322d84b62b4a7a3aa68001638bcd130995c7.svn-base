package kr.nomad.mars.dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import javax.sql.DataSource;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;

import kr.nomad.mars.dto.UserGoal;
import kr.nomad.util.T;

public class UGoalDao {
	
	private JdbcTemplate jdbcTemplate;
	public void setDataSource(DataSource dataSource) {
	    this.jdbcTemplate = new JdbcTemplate(dataSource);
	}
	
	
	

	private RowMapper usergoalMapper = new RowMapper() {
		public UserGoal mapRow(ResultSet rs, int rowNum) throws SQLException {
			UserGoal usergoal = new UserGoal();
			usergoal.setGoalSeq(rs.getInt("goal_seq"));
			usergoal.setUserId(rs.getString("user_id"));
			usergoal.setGoalsMblood(rs.getInt("goal_smblood"));
			usergoal.setGoalbMblood(rs.getInt("goal_bmblood"));
			usergoal.setGoalEblood(rs.getInt("goal_eblood"));
			usergoal.setGoalSblood(rs.getInt("goal_sblood"));
			usergoal.setGoalHba(rs.getInt("goal_hba"));
			usergoal.setGoalsPre(rs.getInt("goal_spre"));
			usergoal.setGoalbPre(rs.getInt("goal_bpre"));
			usergoal.setGoalPul(rs.getInt("goal_pul"));
			usergoal.setGoalCol(rs.getInt("goal_col"));
			usergoal.setGoalLdl(rs.getInt("goal_ldl"));
			usergoal.setGoalHdl(rs.getInt("goal_hdl"));
			usergoal.setGoalTg(rs.getInt("goal_tg"));
			usergoal.setGoalsBmi(rs.getInt("goal_sbmi"));
			usergoal.setGoalbBmi(rs.getInt("goal_bbmi"));
			usergoal.setRegDate(rs.getString("reg_date"));
			return usergoal;
		}
	};
	
	//관리목표받아옴
	public UserGoal getGoal(String diseaseId) {
		String query = "" + 
				"SELECT * " +
				"FROM T_NF_USER_GOAL " +
				"WHERE user_id = 'admin' and disease_id = ?";
		return (UserGoal)this.jdbcTemplate.queryForObject(query,  new Object[] { diseaseId },this.usergoalMapper);
	}

    //관리목표저장
	public void addUserGoal(UserGoal usergoal) {
		String query = "" +
				"INSERT INTO T_NF_USER_GOAL " +
				"	( user_id, goal_smblood, reg_date, goal_bmblood, goal_eblood, goal_sblood, goal_hba, goal_spre ,goal_bpre, goal_pul, goal_col, goal_ldl, goal_hdl, goal_tg, goal_sbmi, goal_bbmi) " +
				"VALUES " +
				"	(?, ?, getDate(), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
		this.jdbcTemplate.update(query, new Object[] {
			
				usergoal.getUserId(),
				usergoal.getGoalsMblood(),
				usergoal.getGoalbMblood(),
				usergoal.getGoalEblood(),
				usergoal.getGoalSblood(),
				usergoal.getGoalHba(),
				usergoal.getGoalsPre(),
				usergoal.getGoalbPre(),
				usergoal.getGoalPul(),
				usergoal.getGoalCol(),
				usergoal.getGoalLdl(),
				usergoal.getGoalHdl(),
				usergoal.getGoalTg(),
				usergoal.getGoalsBmi(),
				usergoal.getGoalbBmi(),
		
		});
	}
	
	//저장후
	public UserGoal getuserGoal(String id) {
		String query = "" + 
				"SELECT top 1 * " +
				"FROM T_NF_USER_GOAL " +
				"WHERE user_id = ? order by reg_date desc";
		return (UserGoal)this.jdbcTemplate.queryForObject(query,  new Object[] { id },this.usergoalMapper);
	}
	
	//해당아이디 데이터삭제
	

	public void deleteUserGoal(String id) {
		String query = "DELETE FROM T_NF_USER_GOAL WHERE user_id = ? ";
		try {
				this.jdbcTemplate.update(query, new Object[] { id });
		} catch (Exception e) {
			
		}
	}
	



	/*public void updateUserGoal(UserGoal usergoal) { 
		String query = "" + 
				"UPDATE T_NF_USER_GOAL SET " +
				"	goal_seq = ?, " +
				"	user_id = ?, " +
				"	goal_mblood = ?, " +
				"	goal_eblood = ?, " +
				"	goal_sblood = ?, " +
				"	goal_hba = ?, " +
				"	goal_pre = ?, " +
				"	goal_pul = ?, " +
				"	goal_col = ?, " +
				"	goal_ldl = ?, " +
				"	goal_hdl = ?, " +
				"	goal_tg = ?, " +
				"	goal_bmi = ?, " +
				"	reg_date = ? " +
				"WHERE goal_seq = ? ";
		this.jdbcTemplate.update(query, new Object[] {
			usergoal.getGoalSeq(),
			usergoal.getUserId(),
			usergoal.getGoalMblood(),
			usergoal.getGoalEblood(),
			usergoal.getGoalSblood(),
			usergoal.getGoalHba(),
			usergoal.getGoalPre(),
			usergoal.getGoalPul(),
			usergoal.getGoalCol(),
			usergoal.getGoalLdl(),
			usergoal.getGoalHdl(),
			usergoal.getGoalTg(),
			usergoal.getGoalBmi(),
			usergoal.getRegDate()
		});
	}

	public UserGoal getUserGoal(String goal_seq) {
		String query = "" + 
				"SELECT goal_seq, user_id, goal_mblood, goal_eblood, goal_sblood, goal_hba, goal_pre, goal_pul, goal_col, goal_ldl, goal_hdl, goal_tg, goal_bmi, reg_date " +
				"FROM T_NF_USER_GOAL " +
				"WHERE goal_seq = ? ";
		return (UserGoal)this.jdbcTemplate.queryForObject(query, new Object[] { goal_seq }, this.usergoalMapper);
	}

	public List<UserGoal> getUserGoalList(int page, int itemCountPerPage) {
		String query = "" +
				"SELECT TOP "+ itemCountPerPage +" goal_seq, user_id, goal_mblood, goal_eblood, goal_sblood, goal_hba, goal_pre, goal_pul, goal_col, goal_ldl, goal_hdl, goal_tg, goal_bmi, reg_date " +
				"FROM T_NF_USER_GOAL " +
				"WHERE goal_seq <= ( " +
				"	SELECT MIN(goal_seq) " +
				"	FROM ( " +
				"		SELECT TOP "+ ((page-1) * itemCountPerPage + 1) +" goal_seq " +
				"		FROM T_NF_USER_GOAL " +
				"		ORDER BY goal_seq DESC " +
				"	) AS A) " +
				"ORDER BY goal_seq DESC";
		return (List<UserGoal>)this.jdbcTemplate.query(query, this.usergoalMapper);
	}*/

}
